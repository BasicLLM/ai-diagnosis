<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.10</version>
        <relativePath/>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.basicllm.agent</groupId>
    <artifactId>ai-diagnosis</artifactId>
    <version>0.0.1</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <!-- 百炼平台 SDK -->
        <dependency>
            <groupId>com.aliyun</groupId>
            <artifactId>alibabacloud-bailian20231229</artifactId>
            <version>2.0.5</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!-- 添加 Spring Boot Maven 插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal> <!-- 关键：重新打包生成可执行 JAR -->
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.46.0</version>
                <configuration>
                    <!-- 镜像名称配置方式变更 -->
                    <images>
                        <image>
                            <!-- 拆分 imageName 为 repository + tag -->
                            <name>${project.artifactId}:${project.version}</name>
                            <!-- 定义构建配置 -->
                            <build>
                                <!-- 基础镜像 -->
                                <from>openjdk:17-jdk-slim</from>
                                <!-- 入口点 -->
                                <entryPoint>["java", "-jar", "/ai-diagnosis-0.0.1.jar"]</entryPoint>

                                <!-- 复制 JAR 包 -->
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                    <targetDir>/</targetDir>
                                    <!-- 显式指定 JAR 路径 -->
                                    <inline>
                                        <fileSets>
                                            <fileSet>
                                                <directory>${project.build.directory}</directory>
                                                <includes>
                                                    <include>*.jar</include>
                                                </includes>
                                                <outputDirectory>/</outputDirectory>
                                            </fileSet>
                                        </fileSets>
                                    </inline>
                                </assembly>

                            </build>
                        </image>
                    </images>
                    <!-- Docker 主机配置（可选，默认本地） -->
                    <dockerHost>npipe:////./pipe/docker_engine</dockerHost>
                </configuration>
                <executions>
                    <execution>
                        <id>build-docker-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>